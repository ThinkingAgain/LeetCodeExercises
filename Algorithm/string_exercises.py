"""
有效的字母异位词
=================================================================
给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。
--------------------------------------
示例 1:
输入: s = "anagram", t = "nagaram"
输出: true
---------------------------------------
示例 2:
输入: s = "rat", t = "car"
输出: false
---------------------------------------
说明:
你可以假设字符串只包含小写字母。
进阶:
如果输入字符串包含 unicode 字符怎么办？你能否调整你的解法来应对这种情况？
"""
def isAnagram(s, t):
    if(set(s) != set(t)):
        return False
    for i in set(s):
        if s.count(i) != t.count(i):
            return False
    return True

"""
 验证回文字符串
 ===============================================================================
给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。
说明：本题中，我们将空字符串定义为有效的回文串。
-----------------------------------------
示例 1:
输入: "A man, a plan, a canal: Panama"
输出: true
--------------------------------------
示例 2:
输入: "race a car"
输出: false
--------------------------------------
"""
def isPalindrome(s: str) -> bool:
    isp = "".join([x for x in s if x.isalnum()]).lower()
    return isp == isp[::-1]





if __name__ == "__main__":
    s = "0p"
    print(isPalindrome(s))